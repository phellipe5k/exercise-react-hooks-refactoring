{"ast":null,"code":"var _jsxFileName = \"/home/phellipe/Documentos/Trybe/Bloco 18/react-hooks-exercises/src/TicTacToe.js\";\nimport React, { useContext } from 'react';\nimport TicTacToeContext from './context/TicTacToeContext';\nimport GameBoard from './GameBoard';\nimport { victoryArchivedInLine, victoryArchivedInColumn, victoryArchivedInDiagonals } from './gameLogic';\n\nconst TicTacToe = () => {\n  const {\n    game,\n    setGame\n  } = useContext(TicTacToeContext);\n  const {\n    gameBoard\n  } = game;\n\n  const resetGame = () => {\n    setGame({\n      activePlayer: 1,\n      gameBoard: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    });\n  };\n\n  const victoryArchieved = () => {\n    return victoryArchivedInLine(gameBoard) || victoryArchivedInColumn(gameBoard) || victoryArchivedInDiagonals(gameBoard);\n  };\n\n  const renderButton = () => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: resetGame,\n      \"data-testid\": \"restart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, \"Recome\\xE7ar Jogo\");\n  };\n\n  const win = victoryArchieved();\n\n  if (!gameBoard.includes(0)) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton(), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Empate\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton(), !win ? /*#__PURE__*/React.createElement(GameBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, `Player ${win === 2 ? 'O' : 'X'} Ganhou`));\n};\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/phellipe/Documentos/Trybe/Bloco 18/react-hooks-exercises/src/TicTacToe.js"],"names":["React","useContext","TicTacToeContext","GameBoard","victoryArchivedInLine","victoryArchivedInColumn","victoryArchivedInDiagonals","TicTacToe","game","setGame","gameBoard","resetGame","activePlayer","victoryArchieved","renderButton","win","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,qBADF,EAEEC,uBAFF,EAGEC,0BAHF,QAIO,aAJP;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBR,UAAU,CAACC,gBAAD,CAApC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBF,IAAtB;;AAEA,QAAMG,SAAS,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAAC;AACNG,MAAAA,YAAY,EAAE,CADR;AAENF,MAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AAFL,KAAD,CAAP;AAID,GALD;;AAOA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,WACET,qBAAqB,CAACM,SAAD,CAArB,IACGL,uBAAuB,CAACK,SAAD,CAD1B,IAEGJ,0BAA0B,CAACI,SAAD,CAH/B;AAKD,GAND;;AAQA,QAAMI,YAAY,GAAG,MAAM;AACzB,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEH,SAFX;AAGE,qBAAY,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AASD,GAVD;;AAWE,QAAMI,GAAG,GAAGF,gBAAgB,EAA5B;;AACA,MAAI,CAACH,SAAS,CAACM,QAAV,CAAmB,CAAnB,CAAL,EAA4B;AAC1B,wBACE,0CACGF,YAAY,EADf,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AACD,sBACE,0CACGA,YAAY,EADf,EAEI,CAACC,GAAF,gBAEG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,gBAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,UAASA,GAAG,KAAK,CAAR,GAAY,GAAZ,GAAkB,GAAI,SAArC,CANN,CADF;AAUH,CAjDD;;AAmDA,eAAeR,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport TicTacToeContext from './context/TicTacToeContext';\nimport GameBoard from './GameBoard';\nimport { \n  victoryArchivedInLine,\n  victoryArchivedInColumn,\n  victoryArchivedInDiagonals \n} from './gameLogic';\n\nconst TicTacToe = () => {\n  const { game, setGame } = useContext(TicTacToeContext);\n  const { gameBoard } = game;\n\n  const resetGame = () => {\n    setGame({\n      activePlayer: 1,\n      gameBoard: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    })\n  }\n\n  const victoryArchieved = () => {\n    return (\n      victoryArchivedInLine(gameBoard)\n      || victoryArchivedInColumn(gameBoard)\n      || victoryArchivedInDiagonals(gameBoard)\n    );\n  }\n\n  const renderButton = () => {\n    return (\n      <button\n        type=\"button\"\n        onClick={resetGame}\n        data-testid=\"restart-button\"\n      >\n        Recome√ßar Jogo\n      </button>\n    );\n  }\n    const win = victoryArchieved();\n    if (!gameBoard.includes(0)) {\n      return (\n        <>\n          {renderButton()}\n          <h1>Empate</h1>\n        </>\n      );\n    }\n    return (\n      <>\n        {renderButton()}\n        {(!win)\n          ? (\n            <GameBoard />\n          )\n          : <h1>{`Player ${win === 2 ? 'O' : 'X'} Ganhou`}</h1>}\n      </>\n    );\n}\n\nexport default TicTacToe;\n"]},"metadata":{},"sourceType":"module"}