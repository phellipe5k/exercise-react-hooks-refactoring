{"ast":null,"code":"var _jsxFileName = \"/home/phellipe/Documentos/Trybe/Bloco 18/react-hooks-exercises/src/TicTacToe.js\";\nimport React, { useContext } from 'react';\nimport TicTacToeContext from './context/TicTacToeContext';\nimport GameBoard from './GameBoard';\n\nconst TicTacToe = () => {\n  const {\n    game,\n    setGame\n  } = useContext(TicTacToeContext);\n  const {\n    gameBoard\n  } = game;\n\n  const victoryArchivedInLine = gameBoard => {\n    for (let i = 0; i <= 6; i += 3) {\n      if (gameBoard[i] === gameBoard[i + 1] && gameBoard[i + 1] === gameBoard[i + 2] && gameBoard[i] !== 0) return gameBoard[i];\n    }\n\n    return false;\n  };\n\n  const victoryArchivedInColumn = gameBoard => {\n    for (let i = 0; i <= 2; i += 1) {\n      if (gameBoard[i] === gameBoard[i + 3] && gameBoard[i + 3] === gameBoard[i + 6] && gameBoard[i] !== 0) return gameBoard[i];\n    }\n\n    return false;\n  };\n\n  const victoryArchivedInDiagonals = gameBoard => {\n    if (gameBoard[4] === 0) return false;\n\n    if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n      return gameBoard[0];\n    }\n\n    if (gameBoard[2] === gameBoard[4] && gameBoard[4] === gameBoard[6]) {\n      return gameBoard[2];\n    }\n\n    return false;\n  };\n\n  const resetGame = () => {\n    this.setState({\n      activePlayer: 1,\n      gameBoard: [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    });\n  };\n\n  const victoryArchieved = () => {\n    return victoryArchivedInLine(gameBoard) || victoryArchivedInColumn(gameBoard) || victoryArchivedInDiagonals(gameBoard);\n  };\n\n  const renderButton = () => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: resetGame,\n      \"data-testid\": \"restart-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Recome\\xE7ar Jogo\");\n  };\n\n  const win = victoryArchieved();\n\n  if (!gameBoard.includes(0)) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton(), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Empate\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton(), !win ? /*#__PURE__*/React.createElement(GameBoard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, `Player ${win === 2 ? 'O' : 'X'} Ganhou`));\n};\n\nexport default TicTacToe;","map":{"version":3,"sources":["/home/phellipe/Documentos/Trybe/Bloco 18/react-hooks-exercises/src/TicTacToe.js"],"names":["React","useContext","TicTacToeContext","GameBoard","TicTacToe","game","setGame","gameBoard","victoryArchivedInLine","i","victoryArchivedInColumn","victoryArchivedInDiagonals","resetGame","setState","activePlayer","victoryArchieved","renderButton","win","includes"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport TicTacToeContext from './context/TicTacToeContext';\nimport GameBoard from './GameBoard';\n\nconst TicTacToe = () => {\n  const { game, setGame } = useContext(TicTacToeContext);\n  const { gameBoard } = game;\n\n  const victoryArchivedInLine = (gameBoard) => {\n    for (let i = 0; i <= 6; i += 3) {\n      if (\n        gameBoard[i] === gameBoard[i + 1]\n        && gameBoard[i + 1] === gameBoard[i + 2]\n        && gameBoard[i] !== 0\n      ) return gameBoard[i];\n    }\n    return false;\n  }\n\n  const victoryArchivedInColumn = (gameBoard) => {\n    for (let i = 0; i <= 2; i += 1) {\n      if (\n        gameBoard[i] === gameBoard[i + 3]\n        && gameBoard[i + 3] === gameBoard[i + 6]\n        && gameBoard[i] !== 0\n      ) return gameBoard[i];\n    }\n    return false;\n  }\n\n  const victoryArchivedInDiagonals = (gameBoard) => {\n    if (gameBoard[4] === 0) return false;\n    if (gameBoard[0] === gameBoard[4] && gameBoard[4] === gameBoard[8]) {\n      return gameBoard[0];\n    }\n    if (gameBoard[2] === gameBoard[4] && gameBoard[4] === gameBoard[6]) {\n      return gameBoard[2];\n    }\n    return false;\n  }\n\n  const resetGame = () => {\n    this.setState({\n      activePlayer: 1,\n      gameBoard: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    });\n  }\n\n  const victoryArchieved = () => {\n    return (\n      victoryArchivedInLine(gameBoard)\n      || victoryArchivedInColumn(gameBoard)\n      || victoryArchivedInDiagonals(gameBoard)\n    );\n  }\n\n  const renderButton = () => {\n    return (\n      <button\n        type=\"button\"\n        onClick={resetGame}\n        data-testid=\"restart-button\"\n      >\n        Recome√ßar Jogo\n      </button>\n    );\n  }\n    const win = victoryArchieved();\n    if (!gameBoard.includes(0)) {\n      return (\n        <>\n          {renderButton()}\n          <h1>Empate</h1>\n        </>\n      );\n    }\n    return (\n      <>\n        {renderButton()}\n        {(!win)\n          ? (\n            <GameBoard\n            />\n          )\n          : <h1>{`Player ${win === 2 ? 'O' : 'X'} Ganhou`}</h1>}\n      </>\n    );\n}\n\nexport default TicTacToe;"]},"metadata":{},"sourceType":"module"}